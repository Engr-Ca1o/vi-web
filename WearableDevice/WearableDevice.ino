#include <GxEPD2_BW.h>
#include <Fonts/FreeMonoBold9pt7b.h>
#include <Fonts/FreeMonoBold18pt7b.h>  // Larger Font for Message
#include "GxEPD2_display_selection_new_style.h"
#include <SPI.h>
#include <LoRa.h>
#include <Wire.h>
#include "Adafruit_DRV2605.h"

Adafruit_DRV2605 drv;

// LoRa Configuration
#define SS  5    // LoRa module CS
#define RST 14   // LoRa module RESET
#define DI0 26    // LoRa module IRQ

String lastMessage = "...";  // Last received message
String currentMessage = "...";  // Default startup message

void setup() {
  Serial.begin(115200);
    
  // Initialize Display
  display.init(115200, true, 2, false);
  display.setRotation(1);
  display.setFont(&FreeMonoBold9pt7b);
  display.setTextColor(GxEPD_BLACK);

  if (! drv.begin()) {
    Serial.println("Could not find DRV2605");
    while (1) delay(10);
  }
 
  drv.selectLibrary(1);
  drv.setMode(DRV2605_MODE_INTTRIG); 

  // Show initial UI
  showMessage();

  // Initialize LoRa
  LoRa.setPins(SS, RST, DI0);
  if (!LoRa.begin(433E6)) {  
    Serial.println("LoRa init failed!");
    currentMessage = "LoRa Init Failed!";
    showMessage();
    while (1);
  }

  LoRa.setSpreadingFactor(7);
  LoRa.setSignalBandwidth(125E3);
  LoRa.setCodingRate4(5);
  LoRa.setTxPower(17,true);

  Serial.println("LoRa Initialized.");
}

void loop() {
  // Check for incoming LoRa messages
  int packetSize = LoRa.parsePacket();
  if (packetSize) {
    drv.setWaveform(0, 58);
    drv.setWaveform(0, 58);
    drv.setWaveform(0, 58);
    drv.setWaveform(0, 58);
    drv.setWaveform(0, 58);
    drv.setWaveform(1, 0);    // end waveform

    // play the effect!
    drv.go();

    lastMessage = currentMessage; // Store previous message
    currentMessage = "";  // Reset current message

    while (LoRa.available()) {
      currentMessage += (char)LoRa.read();  // Read full message
    }

    Serial.print("Received: ");
    Serial.println(currentMessage);

        // Update Display
    showMessage();
   
  }
}

void showMessage() {
    display.setPartialWindow(0, 0, display.width(), display.height());
    display.firstPage();
    do {
        display.fillScreen(GxEPD_WHITE);

        // Draw border
        display.drawRect(0, 0, display.width(), display.height(), GxEPD_BLACK);

        // Top Section (Static Utils)
        display.setFont(&FreeMonoBold9pt7b);
        display.setCursor(10, 15);
        display.print("Status: Active");

        // Bottom Section (Static Utils)
        display.setCursor(10, display.height() - 10);
        display.print("Last: " + lastMessage);

        // Middle Section (Current Message with Larger Font)
        display.setFont(&FreeMonoBold18pt7b);
        int16_t tbx, tby;
        uint16_t tbw, tbh;
        display.getTextBounds(currentMessage.c_str(), 0, 0, &tbx, &tby, &tbw, &tbh);
        uint16_t x = ((display.width() - tbw) / 2) - tbx;
        uint16_t y = ((display.height() / 2) - tbh / 2) - tby;
        display.setCursor(x, y);
        display.print(currentMessage);
        
    } while (display.nextPage());
}


// 'Car_pictogram', 60x60px
const unsigned char car_symbolCar_pictogram [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xf0, 
	0xff, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0xff, 0xf0, 0xfe, 0x7f, 0x8f, 0xff, 0xff, 0xf0, 
	0xff, 0xc1, 0xfe, 0x7f, 0xc7, 0xff, 0xff, 0xf0, 0xff, 0x83, 0xfe, 0x7f, 0xe3, 0xff, 0xff, 0xf0, 
	0xff, 0x07, 0xfe, 0x7f, 0xf1, 0xff, 0xff, 0xf0, 0xfe, 0x0f, 0xfe, 0x7f, 0xf8, 0xff, 0xff, 0xf0, 
	0xfc, 0x0f, 0xfe, 0x7f, 0xfc, 0x7f, 0xff, 0xf0, 0xf8, 0x1f, 0xfe, 0x7f, 0xfc, 0x07, 0xff, 0xf0, 
	0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 
	0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0, 0x3c, 0x00, 0x00, 0x00, 0x03, 0xc0, 0xf0, 
	0xf0, 0xe7, 0x00, 0x00, 0x00, 0x0e, 0x70, 0x70, 0xe0, 0x81, 0x80, 0x00, 0x00, 0x18, 0x18, 0x70, 
	0xe1, 0x00, 0x80, 0x00, 0x00, 0x10, 0x08, 0x70, 0xe1, 0x00, 0x80, 0x00, 0x00, 0x10, 0x08, 0x70, 
	0xe1, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x70, 0xff, 0x00, 0x7f, 0xff, 0xff, 0xf0, 0x0f, 0xf0, 
	0xff, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xf0, 0xff, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xf0, 
	0xff, 0xc1, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 496)
const int car_symbolallArray_LEN = 1;
const unsigned char* car_symbolallArray[1] = {
	car_symbolCar_pictogram
};


// 'motor', 50x50px
const unsigned char motor_symbolmotor [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 
	0xff, 0xff, 0xf8, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 
	0xc0, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x84, 0x07, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x0c, 0x17, 
	0xff, 0xc0, 0xff, 0xff, 0xff, 0xbe, 0x17, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xfe, 0x17, 0xff, 0xc0, 
	0xff, 0xff, 0xff, 0x80, 0x0b, 0xff, 0xc0, 0xff, 0xff, 0xfe, 0x00, 0x0b, 0xff, 0xc0, 0xe0, 0x1f, 
	0xfc, 0x00, 0x03, 0xff, 0xc0, 0x00, 0x1f, 0xf8, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x0f, 0xf0, 0x00, 
	0x0f, 0xff, 0xc0, 0x80, 0x07, 0xe0, 0x03, 0x07, 0xff, 0xc0, 0xff, 0xc0, 0x00, 0x06, 0x07, 0xff, 
	0xc0, 0xff, 0xf8, 0x00, 0x38, 0x23, 0xff, 0xc0, 0xff, 0xfc, 0x03, 0xe0, 0x70, 0x07, 0xc0, 0xfc, 
	0x1f, 0x00, 0x00, 0x70, 0x01, 0xc0, 0xf0, 0x06, 0x00, 0x00, 0x60, 0x00, 0xc0, 0xc0, 0x00, 0x00, 
	0x00, 0xc0, 0x87, 0xc0, 0xc3, 0xe0, 0x40, 0x00, 0x80, 0x01, 0xc0, 0x8f, 0xe0, 0xc0, 0x01, 0x84, 
	0x00, 0xc0, 0x8f, 0x80, 0xe0, 0x01, 0x88, 0x3c, 0x40, 0x1e, 0x00, 0x00, 0x01, 0x91, 0x1e, 0x00, 
	0x1c, 0x00, 0x00, 0x01, 0xb1, 0x0e, 0x00, 0x1c, 0x00, 0x00, 0x01, 0xf1, 0x86, 0x00, 0x1f, 0xf8, 
	0xf0, 0x03, 0xf1, 0x86, 0x00, 0x8f, 0xf0, 0xfc, 0x07, 0xf1, 0xce, 0x00, 0x87, 0xf1, 0xff, 0xff, 
	0xf1, 0xfe, 0x00, 0xc3, 0xc1, 0xff, 0xff, 0xf8, 0xfc, 0x40, 0xe0, 0x03, 0xff, 0xff, 0xfc, 0x30, 
	0xc0, 0xf0, 0x0f, 0xff, 0xff, 0xfe, 0x01, 0xc0, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0x03, 0xc0, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 368)
const int motor_symbolallArray_LEN = 1;
const unsigned char* motor_symbolallArray[1] = {
	motor_symbolmotor
};



